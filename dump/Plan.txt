160,000

Plan A:
Walmart,eBay,mays - Technical + domain + architecture + Communications- 4S


Plan B:
Amazon, facebook, Google - Technical + IQ  + Design + Communications  - 4s


Implementation:
No.of problems need solving.

Strategy:


Dec		:	Speed up in coding.	
Jan 	:	Tuned code.
Feb		:	Real world problems solving.
March	:	In interviews

Domain knowledge 			:	Current project High priority
Application Architecture	:	
Java Concepts				:	OOps, Threads, lambda expressions, stream, default methods, functional interfaces
Web							:	Spring Boot, Spring Data JPA, Cacheing, JMS, REST, Web services, Mail, messaging
Featuers					:	Authentication, Security(OKTA, OAuth)
Additional Knowldge			:	Micro services, AWS, DEVOPS(Jenkins, Docker, web servers, Git, Maven,)
Script						: 	Shell
Database					: 	SQL




CI CD : Continuous Integration and Continus Delivery



Contract Position:
------------------
coding tests
REST
Spring Boot, Spring Data JPA
Agular JS 2 / 4


Linear Search
Binary Search
Exponential Search
Genetic Algorithm
Interpolation Search
Jump Search
Ternary Search
Tree Search



Algorithm	Time Complexity	Space Complexity
Best	Average	Worst	Worst
Quicksort	Ω(n log(n))	Θ(n log(n))	O(n^2)	O(log(n))
Mergesort	Ω(n log(n))	Θ(n log(n))	O(n log(n))	O(n)
Timsort	Ω(n)	Θ(n log(n))	O(n log(n))	O(n)
Heapsort	Ω(n log(n))	Θ(n log(n))	O(n log(n))	O(1)
Bubble Sort	Ω(n)	Θ(n^2)	O(n^2)	O(1)
Insertion Sort	Ω(n)	Θ(n^2)	O(n^2)	O(1)
Selection Sort	Ω(n^2)	Θ(n^2)	O(n^2)	O(1)
Tree Sort	Ω(n log(n))	Θ(n log(n))	O(n^2)	O(n)
Shell Sort	Ω(n log(n))	Θ(n(log(n))^2)	O(n(log(n))^2)	O(1)
Bucket Sort	Ω(n+k)	Θ(n+k)	O(n^2)	O(n)
Radix Sort	Ω(nk)	Θ(nk)	O(nk)	O(n+k)
Counting Sort	Ω(n+k)	Θ(n+k)	O(n+k)	O(k)
Cubesort



